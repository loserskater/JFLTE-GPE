#### Assert check that we're running a valid device

assert(getprop("ro.product.device") == "jflte" || getprop("ro.build.product") == "jflte" || 
       getprop("ro.product.device") == "jfltexx" || getprop("ro.build.product") == "jfltexx" || 
       getprop("ro.product.device") == "i9505" || getprop("ro.build.product") == "i9505" || 
       getprop("ro.product.device") == "GT-I9505" || getprop("ro.build.product") == "GT-I9505" || 
       getprop("ro.product.device") == "jgedlte" || getprop("ro.build.product") == "jgedlte" || 
       getprop("ro.product.device") == "i9505g" || getprop("ro.build.product") == "i9505g" || 
       getprop("ro.product.device") == "GT-I9505G" || getprop("ro.build.product") == "GT-I9505G" || 
       getprop("ro.product.device") == "jfltevzw" || getprop("ro.build.product") == "jfltevzw" || 
       getprop("ro.product.device") == "jfltespr" || getprop("ro.build.product") == "jfltespr" || 
       getprop("ro.product.device") == "jflterefreshspr" || getprop("ro.build.product") == "jflterefreshspr" || 
       getprop("ro.product.device") == "jfltetmo" || getprop("ro.build.product") == "jfltetmo" || 
       getprop("ro.product.device") == "jfltecri" || getprop("ro.build.product") == "jfltecri" || 
       getprop("ro.product.device") == "jfltecsp" || getprop("ro.build.product") == "jfltecsp" || 
       getprop("ro.product.device") == "jflteatt" || getprop("ro.build.product") == "jflteatt" || 
       getprop("ro.product.device") == "jfltecan" || getprop("ro.build.product") == "jfltecan" || 
       getprop("ro.product.device") == "jflteusc" || getprop("ro.build.product") == "jflteusc" || 
       getprop("ro.product.device") == "jfltezm" || getprop("ro.build.product") == "jfltezm" || abort("Incorrect device. Please make sure you are using a supported device"););


#### Begin

	unmount("/cache");
	unmount("/data");
	unmount("/system");
	ui_print("<b><#009688>|----------- JFLTE-GPE ----------|</#></b>");
	ui_print(" ");
	ui_print(" ");


#### Mounting
	
	ui_print("<b><#009688>Mounting and Formatting Devices...</#></b>");

	run_program("/sbin/mount", "-t", "auto", "/system");
	run_program("/sbin/mount", "-t", "auto", "/cache");
	run_program("/sbin/mount", "-t", "auto", "/data");

	package_extract_file("system/xbin/busybox", "/tmp/busybox");
	set_perm(0, 0, 0777, "/tmp/busybox");

#### Wipe Data

	ui_print("Wiping System...");
	delete_recursive("/system"); 

	if file_getprop("/tmp/aroma-data/wipe.prop","wipe") == "factory" then	
		ui_print("Factory resetting...");
		package_extract_file("aroma/scripts/wipe.sh", "/tmp/wipe.sh");
		package_extract_file("aroma/scripts/bash", "/tmp/bash");
		set_perm(0, 0, 0777, "/tmp/wipe.sh");
		set_perm(0, 0, 0777, "/tmp/bash");
		run_program("/tmp/wipe.sh");
	endif;

	if file_getprop("/tmp/aroma-data/wipe.prop","wipe") == "full" then  
		ui_print("Full wiping...");
		delete_recursive("/data"); 
	endif;
	
	ui_print("Clearing Cache and Dalvik...");
	delete_recursive("/data/dalvik-cache"); 
	delete_recursive("/cache"); 

	show_progress(1.0, 1500);


#### Install System
	
	ui_print("<b><#009688>Installing System...</#></b>");
	package_extract_dir("system", "/system");
	package_extract_file("Changelog.md", "/system/etc/CHANGELOG.txt");

# Clear OTA app data for those that anger developers and dirty flash >.<
	delete_recursive("/data/data/com.ota.updates");
	delete_recursive("/data/data/com.ultima.settings");

	ui_print("<b><#009688>Installing Data...</#></b>");
	package_extract_dir("data", "/data");


### Setting DPI

	if file_getprop("/tmp/aroma-data/install.prop","dpi") != "480" then
		package_extract_file("aroma/scripts/set_dpi.sh", "/tmp/set_dpi.sh");
		set_perm(0, 0, 0777, "/tmp/set_dpi.sh");
		run_program("/tmp/set_dpi.sh", file_getprop("/tmp/aroma-data/install.prop","dpi"));
	endif;

#### Installing custom apps

# Launchers
    if file_getprop("/tmp/aroma-data/install.prop","launcher") == "google" then
      ui_print("Installing Google Experience Launcher");
	  package_extract_dir("aroma/apps/launchers/google", "/system/app");
    endif;	
	if file_getprop("/tmp/aroma-data/install.prop","launcher") == "stock" then
		ui_print("Installing Trebuchet Launcher");
		package_extract_dir("aroma/apps/launchers/trebuchet", "/system/priv-app");
	endif;
	if file_getprop("/tmp/aroma-data/install.prop","launcher") == "nova" then
      ui_print("Installing Nova Launcher");
	  package_extract_dir("aroma/apps/launchers/nova", "/system/app");
    endif;
    if file_getprop("/tmp/aroma-data/install.prop","launcher") == "apex" then
      ui_print("Installing Apex Launcher");
	  package_extract_dir("aroma/apps/launchers/apex", "/system/app");
    endif;

# Cameras
	if file_getprop("/tmp/aroma-data/install.prop","camera") == "camera_google" then
		ui_print("Installing Google Camera");
		package_extract_dir("aroma/apps/cameras/google", "/system/app");
    endif;
    if file_getprop("/tmp/aroma-data/install.prop","camera") == "camera_moto" then
		ui_print("Installing Motorola Camera");
		package_extract_dir("aroma/apps/cameras/moto", "/system/priv-app");
	endif;
	if file_getprop("/tmp/aroma-data/install.prop","camera") == "camera_opo" then
		ui_print("Installing OnePlus One Camera");
		package_extract_dir("aroma/apps/cameras/opo", "/system/app");
	endif;

# Gallery
    if file_getprop("/tmp/aroma-data/install.prop","gallery") == "aosp" then
        ui_print("Installing AOSP Gallery");
        package_extract_dir("aroma/apps/gallery/aosp", "/system");
    endif;
	if file_getprop("/tmp/aroma-data/install.prop","gallery") == "moto" then
        ui_print("Installing Moto Gallery");
        package_extract_dir("aroma/apps/gallery/moto", "/system");
    endif;
	
# Messenger
    if file_getprop("/tmp/aroma-data/install.prop","messenger") == "google" then
        ui_print("Installing Google Messenger");
        package_extract_dir("aroma/apps/mms/messenger", "/system/priv-app");
    endif;
    if file_getprop("/tmp/aroma-data/install.prop","messenger") == "aosp" then
        ui_print("Installing AOSP Messaging");
        package_extract_dir("aroma/apps/mms/aosp", "/system/priv-app");
    endif;

# Contacts and Dialer
    if file_getprop("/tmp/aroma-data/install.prop","contacts_dialer") == "stock" then
        ui_print("Installing Stock Contacts and Dialer");
        package_extract_dir("aroma/apps/contacts_dialer/stock", "/system/priv-app");
    endif;
   	if file_getprop("/tmp/aroma-data/install.prop","contacts_dialer") == "invertedteal" then
        ui_print("Installing Dark Contacts and Dialer");
        package_extract_dir("aroma/apps/contacts_dialer/invertedteal", "/system/priv-app");
    endif;
    if file_getprop("/tmp/aroma-data/install.prop","contacts_dialer") == "invertedstock" then
        ui_print("Installing Dark Contacts and Dialer");
        package_extract_dir("aroma/apps/contacts_dialer/invertedstock", "/system/priv-app");
    endif;

# Settings
    if file_getprop("/tmp/aroma-data/install.prop","settings") == "stock" then
        ui_print("Installing Stock Settings");
        package_extract_dir("aroma/apps/settings/stock", "/system/priv-app");
    endif;
    if file_getprop("/tmp/aroma-data/install.prop","settings") == "dark" then
        ui_print("Installing Dark Settings");
        package_extract_dir("aroma/apps/settings/dark", "/system/priv-app");
    endif;

# Music Apps
	if file_getprop("/tmp/aroma-data/install.prop","audio") == "eleven" then
        ui_print("Installing Eleven Music Player");
        package_extract_dir("aroma/apps/music/eleven", "/system/app");
    endif;
	if file_getprop("/tmp/aroma-data/install.prop","audio") == "apollo" then
        ui_print("Installing Apollo Music Player");
        package_extract_dir("aroma/apps/music/apollo", "/system/app");
    endif;
	
# DSP Audio
    if file_getprop("/tmp/aroma-data/install.prop","dsp") == "stock" then
        ui_print("Installing Stock DSP");
        package_extract_dir("aroma/apps/audio/stock", "/system");
    endif;
    if file_getprop("/tmp/aroma-data/install.prop","dsp") == "audiofx" then
        ui_print("Installing AudioFX");
        package_extract_dir("aroma/apps/audio/stock", "/system");
        package_extract_dir("aroma/apps/audio/audiofx", "/system");
        delete_recursive("/system/priv-app/MusicFX");
    endif;
    if file_getprop("/tmp/aroma-data/install.prop","dsp") == "dsp" then
        ui_print("Installing Cyanogen DSP");
        package_extract_dir("aroma/apps/audio/dsp", "/system");
    endif;
	
# Browser
	if file_getprop("/tmp/aroma-data/install.prop","browser") == "chrome" then
        ui_print("Installing Google Chrome");
        package_extract_dir("aroma/apps/browsers/chrome", "/system/app");
    endif;
    if file_getprop("/tmp/aroma-data/install.prop","browser") == "cyan" then
        ui_print("Installing CyanogenMod Browser");
        package_extract_dir("aroma/apps/browsers/cyan", "/system/priv-app");
    endif;

# Data Apps
	if file_getprop("/tmp/aroma-data/install.prop","adaway") == "1" then
		ui_print("Installing AdAway");
        package_extract_dir("aroma/apps/data/adaway", "/data");
    endif;
    if file_getprop("/tmp/aroma-data/install.prop","es_file_explorer") == "1" then
        ui_print("Installing ES File Explorer");
        package_extract_dir("aroma/apps/data/es_file_explorer", "/data");
    endif;
    if file_getprop("/tmp/aroma-data/install.prop","gmail") == "1" then
        ui_print("Installing GMail");
        package_extract_dir("aroma/apps/data/gmail", "/data/app");
    endif;
    if file_getprop("/tmp/aroma-data/install.prop","lockclock") == "1" then
        ui_print("Installing cLock");
        package_extract_dir("aroma/apps/data/lockclock", "/data/app");
    endif;
	if file_getprop("/tmp/aroma-data/install.prop","ears") == "1" then
        ui_print("Installing Google Sound Search");
        package_extract_dir("aroma/apps/ears", "/system/app");
    endif;
    if file_getprop("/tmp/aroma-data/install.prop","tts") == "1" then
        ui_print("Installing Google Text-to-Speech");
        package_extract_dir("aroma/apps/data/tts", "/data/app");
    endif;
	if file_getprop("/tmp/aroma-data/install.prop","wallet") == "1" then
        ui_print("Installing Google Wallet");
        package_extract_dir("aroma/apps/wallet/google", "/system/priv-app");
    endif;

# Live Wallpapers
	if file_getprop("/tmp/aroma-data/install.prop","galaxy") == "1" then
		ui_print("Installing Black Hole LWP");
        package_extract_dir("aroma/apps/live_wallpapers/galaxy", "/system/app");
    endif;
    if file_getprop("/tmp/aroma-data/install.prop","grass") == "1" then
		ui_print("Installing Grass LWP");
        package_extract_dir("aroma/apps/live_wallpapers/grass", "/system/app");
    endif;
    if file_getprop("/tmp/aroma-data/install.prop","spiral") == "1" then
		ui_print("Installing Holo Spiral LWP");
        package_extract_dir("aroma/apps/live_wallpapers/spiral", "/system/app");
    endif;
    if file_getprop("/tmp/aroma-data/install.prop","microbes") == "1" then
		ui_print("Installing Microbes LWP");
        package_extract_dir("aroma/apps/live_wallpapers/microbes", "/system/app");
    endif;
    if file_getprop("/tmp/aroma-data/install.prop","noisefield") == "1" then
		ui_print("Installing Bubbles LWP");
        package_extract_dir("aroma/apps/live_wallpapers/noisefield", "/system/app");
    endif;
    if file_getprop("/tmp/aroma-data/install.prop","phasebeam") == "1" then
		ui_print("Installing Phase Beam LWP");
        package_extract_dir("aroma/apps/live_wallpapers/phasebeam", "/system/app");
    endif;
	if file_getprop("/tmp/aroma-data/install.prop","spectrum") == "1" then
		ui_print("Installing Spectrum LWP");
        package_extract_dir("aroma/apps/live_wallpapers/spectrum", "/system/app");
    endif;
    if file_getprop("/tmp/aroma-data/install.prop","photophase") == "1" then
		ui_print("Installing Photo Phase LWP");
        package_extract_dir("aroma/apps/live_wallpapers/photophase", "/system/app");
    endif;
    if file_getprop("/tmp/aroma-data/install.prop","sunbeam") == "1" then
		ui_print("Installing Sun Beam LWP");
        package_extract_dir("aroma/apps/live_wallpapers/sunbeam", "/system/app");
    endif;


#### Symlinking, permissions and Busybox
ui_print("<b><#009688>Symlinking...</#></b>");
	symlink("app_process32", "/system/bin/app_process");
	symlink("dalvikvm32", "/system/bin/dalvikvm");
	symlink("/data/misc/audio/mbhc.bin", "/system/etc/firmware/wcd9310/wcd9310_mbhc.bin");
	symlink("/data/misc/audio/wcd9310_anc.bin", "/system/etc/firmware/wcd9310/wcd9310_anc.bin");
	symlink("/etc/thermald-8064ab.conf", "/system/etc/thermald.conf");
	symlink("/etc/thermal-engine-8064ab.conf", "/system/etc/thermal-engine.conf");
	symlink("/firmware/image/modem_f2.*", "/system/etc/firmware/modem_fw.*");
	symlink("/firmware/image/q6.b00", "/system/etc/firmware/q6.b00");
	symlink("/firmware/image/q6.b01", "/system/etc/firmware/q6.b01");
	symlink("/firmware/image/q6.b03", "/system/etc/firmware/q6.b03");
	symlink("/firmware/image/q6.b04", "/system/etc/firmware/q6.b04");
	symlink("/firmware/image/q6.b05", "/system/etc/firmware/q6.b05");
	symlink("/firmware/image/q6.b06", "/system/etc/firmware/q6.b06");
	symlink("/firmware/image/q6.mdt", "/system/etc/firmware/q6.mdt");
	symlink("/firmware/image/tzapps.b00", "/system/etc/firmware/tzapps.b00");
	symlink("/firmware/image/tzapps.b01", "/system/etc/firmware/tzapps.b01");
	symlink("/firmware/image/tzapps.b02", "/system/etc/firmware/tzapps.b02");
	symlink("/firmware/image/tzapps.b03", "/system/etc/firmware/tzapps.b03");
	symlink("/firmware/image/tzapps.mdt", "/system/etc/firmware/tzapps.mdt");
	symlink("/firmware/image/vidc.b00", "/system/etc/firmware/vidc.b00");
	symlink("/firmware/image/vidc.b01", "/system/etc/firmware/vidc.b01");
	symlink("/firmware/image/vidc.b02", "/system/etc/firmware/vidc.b02");
	symlink("/firmware/image/vidc.b03", "/system/etc/firmware/vidc.b03");
	symlink("/firmware/image/vidc.mdt", "/system/etc/firmware/vidc.mdt");
	symlink("/firmware-mdm/image/acdb.mbn", "/system/etc/firmware/acdb.mbn");
	symlink("/firmware-mdm/image/apps.mbn", "/system/etc/firmware/apps.mbn");
	symlink("/firmware-mdm/image/dsp1.mbn", "/system/etc/firmware/dsp1.mbn");
	symlink("/firmware-mdm/image/dsp2.mbn", "/system/etc/firmware/dsp2.mbn");
	symlink("/firmware-mdm/image/dsp3.mbn", "/system/etc/firmware/dsp3.mbn");
	symlink("/firmware-mdm/image/efs1.mbn", "/system/etc/firmware/efs1.mbn");
	symlink("/firmware-mdm/image/efs2.mbn", "/system/etc/firmware/efs2.mbn");
	symlink("/firmware-mdm/image/efs3.mbn", "/system/etc/firmware/efs3.mbn");
	symlink("/firmware-mdm/image/mdm_acdb.img", "/system/etc/firmware/mdm_acdb.img");
	symlink("/firmware-mdm/image/rpm.mbn", "/system/etc/firmware/rpm.mbn");
	symlink("/firmware-mdm/image/sbl1.mbn", "/system/etc/firmware/sbl1.mbn");
	symlink("/firmware-mdm/image/sbl2.mbn", "/system/etc/firmware/sbl2.mbn");
	symlink("libGLESv2.so", "/system/lib/libGLESv3.so");
	symlink("Roboto-Bold.ttf", "/system/fonts/DroidSans-Bold.ttf");
	symlink("Roboto-Regular.ttf", "/system/fonts/DroidSans.ttf");
	symlink("/system/bin/busybox", "/system/bin/[");
	symlink("/system/bin/busybox", "/system/bin/[[");
	symlink("/system/bin/busybox", "/system/bin/ash");
	symlink("/system/bin/busybox", "/system/bin/awk");
	symlink("/system/bin/busybox", "/system/bin/base64");
	symlink("/system/bin/busybox", "/system/bin/basename");
	symlink("/system/bin/busybox", "/system/bin/bunzip2");
	symlink("/system/bin/busybox", "/system/bin/bzip2");
	symlink("/system/bin/busybox", "/system/bin/cal");
	symlink("/system/bin/busybox", "/system/bin/chat");
	symlink("/system/bin/busybox", "/system/bin/chattr");
	symlink("/system/bin/busybox", "/system/bin/chgrp");
	symlink("/system/bin/busybox", "/system/bin/chroot");
	symlink("/system/bin/busybox", "/system/bin/chrt");
	symlink("/system/bin/busybox", "/system/bin/cksum");
	symlink("/system/bin/busybox", "/system/bin/comm");
	symlink("/system/bin/busybox", "/system/bin/crond");
	symlink("/system/bin/busybox", "/system/bin/crontab");
	symlink("/system/bin/busybox", "/system/bin/cut");
	symlink("/system/bin/busybox", "/system/bin/depmod");
	symlink("/system/bin/busybox", "/system/bin/devmem");
	symlink("/system/bin/busybox", "/system/bin/diff");
	symlink("/system/bin/busybox", "/system/bin/dirname");
	symlink("/system/bin/busybox", "/system/bin/dnsd");
	symlink("/system/bin/busybox", "/system/bin/dnsdomainname");
	symlink("/system/bin/busybox", "/system/bin/dos2unix");
	symlink("/system/bin/busybox", "/system/bin/echo");
	symlink("/system/bin/busybox", "/system/bin/egrep");
	symlink("/system/bin/busybox", "/system/bin/env");
	symlink("/system/bin/busybox", "/system/bin/ether-wake");
	symlink("/system/bin/busybox", "/system/bin/expand");
	symlink("/system/bin/busybox", "/system/bin/expr");
	symlink("/system/bin/busybox", "/system/bin/fakeidentd");
	symlink("/system/bin/busybox", "/system/bin/fdflush");
	symlink("/system/bin/busybox", "/system/bin/fdformat");
	symlink("/system/bin/busybox", "/system/bin/fdisk");
	symlink("/system/bin/busybox", "/system/bin/fgrep");
	symlink("/system/bin/busybox", "/system/bin/find");
	symlink("/system/bin/busybox", "/system/bin/fold");
	symlink("/system/bin/busybox", "/system/bin/free");
	symlink("/system/bin/busybox", "/system/bin/freeramdisk");
	symlink("/system/bin/busybox", "/system/bin/fsck");
	symlink("/system/bin/busybox", "/system/bin/fsync");
	symlink("/system/bin/busybox", "/system/bin/ftpd");
	symlink("/system/bin/busybox", "/system/bin/ftpget");
	symlink("/system/bin/busybox", "/system/bin/ftpput");
	symlink("/system/bin/busybox", "/system/bin/getopt");
	symlink("/system/bin/busybox", "/system/bin/groups");
	symlink("/system/bin/busybox", "/system/bin/gunzip");
	symlink("/system/bin/busybox", "/system/bin/head");
	symlink("/system/bin/busybox", "/system/bin/hexdump");
	symlink("/system/bin/busybox", "/system/bin/hostid");
	symlink("/system/bin/busybox", "/system/bin/hostname");
	symlink("/system/bin/busybox", "/system/bin/httpd");
	symlink("/system/bin/busybox", "/system/bin/hwclock");
	symlink("/system/bin/busybox", "/system/bin/ifenslave");
	symlink("/system/bin/busybox", "/system/bin/inetd");
	symlink("/system/bin/busybox", "/system/bin/inotifyd");
	symlink("/system/bin/busybox", "/system/bin/install");
	symlink("/system/bin/busybox", "/system/bin/iostat");
	symlink("/system/bin/busybox", "/system/bin/ipaddr");
	symlink("/system/bin/busybox", "/system/bin/ipcalc");
	symlink("/system/bin/busybox", "/system/bin/iplink");
	symlink("/system/bin/busybox", "/system/bin/iproute");
	symlink("/system/bin/busybox", "/system/bin/iprule");
	symlink("/system/bin/busybox", "/system/bin/iptunnel");
	symlink("/system/bin/busybox", "/system/bin/killall");
	symlink("/system/bin/busybox", "/system/bin/killall5");
	symlink("/system/bin/busybox", "/system/bin/less");
	symlink("/system/bin/busybox", "/system/bin/logname");
	symlink("/system/bin/busybox", "/system/bin/losetup");
	symlink("/system/bin/busybox", "/system/bin/lsattr");
	symlink("/system/bin/busybox", "/system/bin/lsusb");
	symlink("/system/bin/busybox", "/system/bin/lzop");
	symlink("/system/bin/busybox", "/system/bin/lzopcat");
	symlink("/system/bin/busybox", "/system/bin/md5sum");
	symlink("/system/bin/busybox", "/system/bin/microcom");
	symlink("/system/bin/busybox", "/system/bin/mkdosfs");
	symlink("/system/bin/busybox", "/system/bin/mke2fs");
	symlink("/system/bin/busybox", "/system/bin/mkfifo");
	symlink("/system/bin/busybox", "/system/bin/mkfs.ext2");
	symlink("/system/bin/busybox", "/system/bin/mkfs.vfat");
	symlink("/system/bin/busybox", "/system/bin/modinfo");
	symlink("/system/bin/busybox", "/system/bin/modprobe");
	symlink("/system/bin/busybox", "/system/bin/more");
	symlink("/system/bin/busybox", "/system/bin/mt");
	symlink("/system/bin/busybox", "/system/bin/nameif");
	symlink("/system/bin/busybox", "/system/bin/nanddump");
	symlink("/system/bin/busybox", "/system/bin/nandwrite");
	symlink("/system/bin/busybox", "/system/bin/nc");
	symlink("/system/bin/busybox", "/system/bin/nice");
	symlink("/system/bin/busybox", "/system/bin/nmeter");
	symlink("/system/bin/busybox", "/system/bin/nslookup");
	symlink("/system/bin/busybox", "/system/bin/ntpd");
	symlink("/system/bin/busybox", "/system/bin/od");
	symlink("/system/bin/busybox", "/system/bin/patch");
	symlink("/system/bin/busybox", "/system/bin/pgrep");
	symlink("/system/bin/busybox", "/system/bin/pidof");
	symlink("/system/bin/busybox", "/system/bin/pkill");
	symlink("/system/bin/busybox", "/system/bin/pmap");
	symlink("/system/bin/busybox", "/system/bin/powertop");
	symlink("/system/bin/busybox", "/system/bin/printf");
	symlink("/system/bin/busybox", "/system/bin/pscan");
	symlink("/system/bin/busybox", "/system/bin/pwd");
	symlink("/system/bin/busybox", "/system/bin/rdate");
	symlink("/system/bin/busybox", "/system/bin/rdev");
	symlink("/system/bin/busybox", "/system/bin/readahead");
	symlink("/system/bin/busybox", "/system/bin/realpath");
	symlink("/system/bin/busybox", "/system/bin/reset");
	symlink("/system/bin/busybox", "/system/bin/rev");
	symlink("/system/bin/busybox", "/system/bin/rfkill");
	symlink("/system/bin/busybox", "/system/bin/run-parts");
	symlink("/system/bin/busybox", "/system/bin/script");
	symlink("/system/bin/busybox", "/system/bin/scriptreplay");
	symlink("/system/bin/busybox", "/system/bin/sed");
	symlink("/system/bin/busybox", "/system/bin/seq");
	symlink("/system/bin/busybox", "/system/bin/setkeycodes");
	symlink("/system/bin/busybox", "/system/bin/setlogcons");
	symlink("/system/bin/busybox", "/system/bin/setsid");
	symlink("/system/bin/busybox", "/system/bin/sha1sum");
	symlink("/system/bin/busybox", "/system/bin/sha256sum");
	symlink("/system/bin/busybox", "/system/bin/sha512sum");
	symlink("/system/bin/busybox", "/system/bin/showkey");
	symlink("/system/bin/busybox", "/system/bin/smemcap");
	symlink("/system/bin/busybox", "/system/bin/sort");
	symlink("/system/bin/busybox", "/system/bin/split");
	symlink("/system/bin/busybox", "/system/bin/stat");
	symlink("/system/bin/busybox", "/system/bin/strings");
	symlink("/system/bin/busybox", "/system/bin/stty");
	symlink("/system/bin/busybox", "/system/bin/sum");
	symlink("/system/bin/busybox", "/system/bin/sysctl");
	symlink("/system/bin/busybox", "/system/bin/tac");
	symlink("/system/bin/busybox", "/system/bin/tail");
	symlink("/system/bin/busybox", "/system/bin/tar");
	symlink("/system/bin/busybox", "/system/bin/tee");
	symlink("/system/bin/busybox", "/system/bin/telnet");
	symlink("/system/bin/busybox", "/system/bin/telnetd");
	symlink("/system/bin/busybox", "/system/bin/test");
	symlink("/system/bin/busybox", "/system/bin/tftp");
	symlink("/system/bin/busybox", "/system/bin/tftpd");
	symlink("/system/bin/busybox", "/system/bin/time");
	symlink("/system/bin/busybox", "/system/bin/timeout");
	symlink("/system/bin/busybox", "/system/bin/tr");
	symlink("/system/bin/busybox", "/system/bin/traceroute");
	symlink("/system/bin/busybox", "/system/bin/traceroute6");
	symlink("/system/bin/busybox", "/system/bin/tty");
	symlink("/system/bin/busybox", "/system/bin/ttysize");
	symlink("/system/bin/busybox", "/system/bin/tunctl");
	symlink("/system/bin/busybox", "/system/bin/uname");
	symlink("/system/bin/busybox", "/system/bin/uncompress");
	symlink("/system/bin/busybox", "/system/bin/unexpand");
	symlink("/system/bin/busybox", "/system/bin/uniq");
	symlink("/system/bin/busybox", "/system/bin/unix2dos");
	symlink("/system/bin/busybox", "/system/bin/unlzop");
	symlink("/system/bin/busybox", "/system/bin/unzip");
	symlink("/system/bin/busybox", "/system/bin/usleep");
	symlink("/system/bin/busybox", "/system/bin/uudecode");
	symlink("/system/bin/busybox", "/system/bin/uuencode");
	symlink("/system/bin/busybox", "/system/bin/vconfig");
	symlink("/system/bin/busybox", "/system/bin/vi");
	symlink("/system/bin/busybox", "/system/bin/watch");
	symlink("/system/bin/busybox", "/system/bin/wc");
	symlink("/system/bin/busybox", "/system/bin/wget");
	symlink("/system/bin/busybox", "/system/bin/which");
	symlink("/system/bin/busybox", "/system/bin/who");
	symlink("/system/bin/busybox", "/system/bin/whoami");
	symlink("/system/bin/busybox", "/system/bin/whois");
	symlink("/system/bin/busybox", "/system/bin/xargs");
	symlink("/system/bin/busybox", "/system/bin/zcat");
	symlink("/system/csc/XAR/csc_contents", "/system/csc_contents");
	symlink("/system/lib/libbluetooth_jni.so", "/system/app/Bluetooth/lib/arm/libbluetooth_jni.so");
	symlink("/system/lib/libdefcontainer_jni.so", "/system/priv-app/DefaultContainerService/lib/arm/libdefcontainer_jni.so");
	symlink("/system/lib/libjni_pacprocessor.so", "/system/app/PacProcessor/lib/arm/libjni_pacprocessor.so");
	symlink("/system/lib/libnfc_nci_jni.so", "/system/app/NfcNci/lib/arm/libnfc_nci_jni.so");
	symlink("/system/lib/libprintspooler_jni.so", "/system/app/PrintSpooler/lib/arm/libprintspooler_jni.so");
	symlink("/system/xbin/su", "/system/bin/su");
	symlink("toolbox", "/system/bin/cat");
	symlink("toolbox", "/system/bin/chcon");
	symlink("toolbox", "/system/bin/chmod");
	symlink("toolbox", "/system/bin/chown");
	symlink("toolbox", "/system/bin/clear");
	symlink("toolbox", "/system/bin/cmp");
	symlink("toolbox", "/system/bin/cp");
	symlink("toolbox", "/system/bin/date");
	symlink("toolbox", "/system/bin/dd");
	symlink("toolbox", "/system/bin/df");
	symlink("toolbox", "/system/bin/dmesg");
	symlink("toolbox", "/system/bin/du");
	symlink("toolbox", "/system/bin/getenforce");
	symlink("toolbox", "/system/bin/getevent");
	symlink("toolbox", "/system/bin/getprop");
	symlink("toolbox", "/system/bin/getsebool");
	symlink("toolbox", "/system/bin/grep");
	symlink("toolbox", "/system/bin/hd");
	symlink("toolbox", "/system/bin/id");
	symlink("toolbox", "/system/bin/ifconfig");
	symlink("toolbox", "/system/bin/iftop");
	symlink("toolbox", "/system/bin/insmod");
	symlink("toolbox", "/system/bin/ioctl");
	symlink("toolbox", "/system/bin/ionice");
	symlink("toolbox", "/system/bin/kill");
	symlink("toolbox", "/system/bin/ln");
	symlink("toolbox", "/system/bin/load_policy");
	symlink("toolbox", "/system/bin/log");
	symlink("toolbox", "/system/bin/ls");
	symlink("toolbox", "/system/bin/lsmod");
	symlink("toolbox", "/system/bin/lsof");
	symlink("toolbox", "/system/bin/md5");
	symlink("toolbox", "/system/bin/mkdir");
	symlink("toolbox", "/system/bin/mknod");
	symlink("toolbox", "/system/bin/mkswap");
	symlink("toolbox", "/system/bin/mount");
	symlink("toolbox", "/system/bin/mv");
	symlink("toolbox", "/system/bin/nandread");
	symlink("toolbox", "/system/bin/netstat");
	symlink("toolbox", "/system/bin/newfs_msdos");
	symlink("toolbox", "/system/bin/nohup");
	symlink("toolbox", "/system/bin/notify");
	symlink("toolbox", "/system/bin/printenv");
	symlink("toolbox", "/system/bin/ps");
	symlink("toolbox", "/system/bin/readlink");
	symlink("toolbox", "/system/bin/renice");
	symlink("toolbox", "/system/bin/restorecon");
	symlink("toolbox", "/system/bin/rm");
	symlink("toolbox", "/system/bin/rmdir");
	symlink("toolbox", "/system/bin/rmmod");
	symlink("toolbox", "/system/bin/route");
	symlink("toolbox", "/system/bin/runcon");
	symlink("toolbox", "/system/bin/schedtop");
	symlink("toolbox", "/system/bin/sendevent");
	symlink("toolbox", "/system/bin/setenforce");
	symlink("toolbox", "/system/bin/setprop");
	symlink("toolbox", "/system/bin/setsebool");
	symlink("toolbox", "/system/bin/sleep");
	symlink("toolbox", "/system/bin/smd");
	symlink("toolbox", "/system/bin/start");
	symlink("toolbox", "/system/bin/stop");
	symlink("toolbox", "/system/bin/swapoff");
	symlink("toolbox", "/system/bin/swapon");
	symlink("toolbox", "/system/bin/sync");
	symlink("toolbox", "/system/bin/top");
	symlink("toolbox", "/system/bin/touch");
	symlink("toolbox", "/system/bin/umount");
	symlink("toolbox", "/system/bin/uptime");
	symlink("toolbox", "/system/bin/vmstat");
	symlink("toolbox", "/system/bin/watchprops");
	symlink("toolbox", "/system/bin/wipe");
ui_print("<b><#009688>Setting Permissions...</#></b>");
	set_metadata_recursive("/system", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata_recursive("/system/bin", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/bin/ATFWD-daemon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ATFWD-daemon_exec:s0");
	set_metadata("/system/bin/app_process", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:zygote_exec:s0");
	set_metadata("/system/bin/at_distributor", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:at_distributor_exec:s0");
	set_metadata("/system/bin/bootanimation", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:bootanimation_exec:s0");
	set_metadata("/system/bin/bugreport", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:bugreport_exec:s0");
	set_metadata("/system/bin/clatd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:clatd_exec:s0");
	set_metadata("/system/bin/connfwexe", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:connfwexe_exec:s0");
	set_metadata("/system/bin/debuggerd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:debuggerd_exec:s0");
	set_metadata("/system/bin/dhcpcd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dhcp_exec:s0");
	set_metadata("/system/bin/diag_uart_log", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:diag_uart_log_exec:s0");
	set_metadata("/system/bin/dnsmasq", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dnsmasq_exec:s0");
	set_metadata("/system/bin/drmserver", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:drmserver_exec:s0");
	set_metadata("/system/bin/dumpstate", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dumpstate_exec:s0");
	set_metadata("/system/bin/dumpsys", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dumpsys_exec:s0");
	set_metadata("/system/bin/efsks", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:efsks_exec:s0");
	set_metadata("/system/bin/hostapd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:hostapd_exec:s0");
	set_metadata("/system/bin/icd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:icd_exec:s0");
	set_metadata("/system/bin/installd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:installd_exec:s0");
	set_metadata("/system/bin/insthk", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:insthk_exec:s0");
	set_metadata("/system/bin/iptables", "uid", 0, "gid", 1000, "mode", 0750, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/bin/keystore", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:keystore_exec:s0");
	set_metadata("/system/bin/ks", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ks_exec:s0");
	set_metadata("/system/bin/logwrapper", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:logwrapper_exec:s0");
	set_metadata("/system/bin/mdnsd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mdnsd_exec:s0");
	set_metadata("/system/bin/mediaserver", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mediaserver_exec:s0");
	set_metadata("/system/bin/mm-pp-daemon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mm-pp-daemon_exec:s0");
	set_metadata("/system/bin/mm-qcamera-daemon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mm-qcamera-daemon_exec:s0");
	set_metadata("/system/bin/mpdecision", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mpdecision_exec:s0");
	set_metadata("/system/bin/mtpd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mtp_exec:s0");
	set_metadata("/system/bin/netcfg", "uid", 0, "gid", 3003, "mode", 02750, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/bin/netd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:netd_exec:s0");
	set_metadata("/system/bin/ping", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ping_exec:s0");
	set_metadata("/system/bin/pppd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ppp_exec:s0");
	set_metadata("/system/bin/qcks", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:qcks_exec:s0");
	set_metadata("/system/bin/qmuxd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:qmuxd_exec:s0");
	set_metadata("/system/bin/qseecomd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:qseecomd_exec:s0");
	set_metadata("/system/bin/racoon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:racoon_exec:s0");
	set_metadata("/system/bin/rild", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:rild_exec:s0");
	set_metadata("/system/bin/rmt_storage", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:rmt_storage_exec:s0");
	set_metadata("/system/bin/run-as", "uid", 0, "gid", 2000, "mode", 0750, "capabilities", 0x0, "selabel", "u:object_r:runas_exec:s0");
	set_metadata("/system/bin/sdcard", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:sdcardd_exec:s0");
	set_metadata("/system/bin/sensorhubservice", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:sensorhubservice_exec:s0");
	set_metadata("/system/bin/servicemanager", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:servicemanager_exec:s0");
	set_metadata("/system/bin/ssr_diag", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ssr_diag_exec:s0");
	set_metadata("/system/bin/surfaceflinger", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:surfaceflinger_exec:s0");
	set_metadata("/system/bin/tc", "uid", 0, "gid", 1000, "mode", 0750, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/bin/thermal-engine", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:thermald_exec:s0");
	set_metadata("/system/bin/thermald", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:thermald_exec:s0");
	set_metadata("/system/bin/time_daemon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:time_daemon_exec:s0");
	set_metadata("/system/bin/vold", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:vold_exec:s0");
	set_metadata("/system/bin/wpa_supplicant", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:wpa_exec:s0");
	set_metadata("/system/etc/init.qcom.sdio.sh", "uid", 0, "gid", 1000, "mode", 0550, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata_recursive("/system/etc/bluetooth", "uid", 1002, "gid", 1002, "dmode", 0755, "fmode", 0440, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/etc/bluetooth/auto_pair_devlist.conf", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/etc/bluetooth/bt_did.conf", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/etc/bluetooth/bt_stack.conf", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata_recursive("/system/etc/dhcpcd", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:dhcp_system_file:s0");
	set_metadata("/system/etc/dhcpcd/dhcpcd-run-hooks", "uid", 1014, "gid", 2000, "mode", 0550, "capabilities", 0x0, "selabel", "u:object_r:dhcp_system_file:s0");
	set_metadata_recursive("/system/etc/ppp", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0555, "capabilities", 0x0, "selabel", "u:object_r:ppp_system_file:s0");
	set_metadata_recursive("/system/lib", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_library_file:s0");
	set_metadata_recursive("/system/vendor", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/vendor/firmware", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/vendor/lib", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/vendor/lib/egl", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata_recursive("/system/vendor/lib/hw", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/vendor/lib/hw/power.qcom.so", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata_recursive("/system/vendor/lib/mediadrm", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/vendor/lib/mediadrm/libwvdrmengine.so", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/vendor/media", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/vendor/pittpatt", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/vendor/pittpatt/models", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/vendor/pittpatt/models/detection", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata_recursive("/system/vendor/pittpatt/models/recognition", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata_recursive("/system/xbin", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_perm_recursive(0, 0, 0755, 0755, "/system/etc/init.d");
ui_print("<b><#009688>Installing BusyBox...</#></b>");
	run_program("/system/xbin/busybox", "--install", "-s", "/system/xbin");

#### Rooting
ui_print("<b><#009688>Installing SuperSU...</#></b>");
    package_extract_file("aroma/scripts/disableroot.sh", "/tmp/disableroot.sh");
    set_perm(0, 0, 0755, "/tmp/disableroot.sh");
    run_program("/tmp/disableroot.sh");
    delete("/tmp/disableroot.sh");

    package_extract_dir("aroma/supersu", "/system");
    symlink("/system/xbin/su", "/system/bin/su");
    symlink("/system/etc/install-recovery.sh", "/system/bin/install-recovery.sh");
    delete("/system/bin/app_process");
    symlink("/system/xbin/daemonsu", "/system/bin/app_process");
    set_metadata("/system/bin/app_process", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
    set_metadata("/system/etc/install-recovery.sh", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
    set_metadata("/system/etc/init.d/99SuperSUDaemon", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
    set_metadata("/system/xbin/su", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");


    # SuperSU requires some additional work
    package_extract_file("aroma/scripts/supersu.sh", "/tmp/supersu.sh");
    set_perm(0, 0, 0755, "/tmp/supersu.sh");
    run_program("/tmp/supersu.sh");
    delete("/tmp/supersu.sh");


    set_metadata("/system/bin/app_process_init", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
    set_metadata("/system/bin/app_process32_original", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");

    symlink("/system/xbin/daemonsu", "/system/bin/app_process32");
    set_metadata("/system/bin/app_process32", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
    
    
    # Apply permissions
    set_metadata("/system/xbin/sugote", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:zygote_exec:s0");
    set_metadata("/system/xbin/sugote-mksh", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
    set_metadata("/system/xbin/supolicy", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
    set_metadata("/system/Superuser/lib/arm/libsupol.so", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
    set_metadata("/system/bin/.ext", "uid", 0, "gid", 0, "mode", 0777, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
    run_program("/system/xbin/su", "--install");


## Kernel

	if file_getprop("/tmp/aroma-data/install.prop","kernel") == "stock" then
      	ui_print("<b><#009688>Installing Stock Kernel...</#></b>");	
	  	if (getprop("ro.product.device") == "jflteatt" || getprop("ro.build.product") == "jflteatt" || 
			getprop("ro.product.device") == "jfltevzw" || getprop("ro.build.product") == "jfltevzw") then
			package_extract_dir("aroma/scripts/loki", "/tmp");
			package_extract_file("aroma/kernel/stock/boot.img", "/tmp/boot.img");

			set_perm(0, 0, 0777, "/tmp/loki_bootloaders");
			set_perm(0, 0, 0777, "/tmp/flash_kernel.sh");
			set_perm(0, 0, 0777, "/tmp/loki_patch");
			set_perm(0, 0, 0777, "/tmp/loki_flash");
			run_program("/tmp/flash_kernel.sh");
		else 
			package_extract_file("aroma/kernel/stock/boot.img", "/dev/block/platform/msm_sdcc.1/by-name/boot");
		endif;

		package_extract_dir("aroma/kernel/stock/system", "/system");
		set_perm_recursive(0, 0, 0755, 0644, "/system/lib/modules");
    endif;	

    if file_getprop("/tmp/aroma-data/install.prop","kernel") == "googymax" then

    	# Hardswap enable or disable
		ui_print("<b><#009688>Setting Swap...</#></b>");	
			package_extract_file("aroma/scripts/hardswap.sh", "/tmp/hardswap.sh");
			set_perm(0, 0, 0777, "/tmp/hardswap.sh");
			run_program("/tmp/hardswap.sh", "/cache", file_getprop("/tmp/aroma-data/hardswap.prop", "swap"));

		ui_print("<b><#009688>Installing GoogyMax Kernel...</#></b>");	
		if (getprop("ro.product.device") == "jflteatt" || getprop("ro.build.product") == "jflteatt" || 
			getprop("ro.product.device") == "jfltevzw" || getprop("ro.build.product") == "jfltevzw") then
			package_extract_dir("aroma/scripts/loki", "/tmp");
			package_extract_file("aroma/kernel/googymax/boot.img", "/tmp/boot.img");

			set_perm(0, 0, 0777, "/tmp/loki_bootloaders");
			set_perm(0, 0, 0777, "/tmp/flash_kernel.sh");
			set_perm(0, 0, 0777, "/tmp/loki_patch");
			set_perm(0, 0, 0777, "/tmp/loki_flash");
			run_program("/tmp/flash_kernel.sh");
		else 
			package_extract_file("aroma/kernel/googymax/boot.img", "/dev/block/platform/msm_sdcc.1/by-name/boot");
		endif;

		package_extract_dir("aroma/kernel/googymax/system", "/system");
		set_perm_recursive(0, 0, 0755, 0644, "/system/lib/modules");
	endif;

#	package_extract_file("aroma/scripts/kernel/kernel_general.sh", "/tmp/kernel_general.sh");
#	set_perm(0, 0, 0777, "/tmp/kernel_general.sh");
#
# CPU Govenor
#	run_program("/tmp/kernel_general.sh","scaling_governor", file_getprop("/tmp/aroma-data/kernel.prop", "govenor"));
#   
# Arch Power
#	package_extract_file("aroma/scripts/kernel/kernel_arch.sh", "/tmp/kernel_arch.sh");
#	set_perm(0, 0, 0777, "/tmp/kernel_arch.sh");
#	run_program("/tmp/kernel_arch.sh",file_getprop("/tmp/aroma-data/kernel.prop", "arch_power_enable"));

# Sched MC
#	run_program("/tmp/kernel_general.sh","sched_mc_power_savings", file_getprop("/tmp/aroma-data/kernel.prop", "sched_mc"));

# CPU undervolt
#	run_program("/tmp/kernel_general.sh","CPUVOLT1", file_getprop("/tmp/aroma-data/kernel.prop", "cpu_undervolt"));
#	run_program("/tmp/kernel_general.sh","CPUVOLT2", file_getprop("/tmp/aroma-data/kernel.prop", "cpu_undervolt"));
#	run_program("/tmp/kernel_general.sh","CPUVOLT3", file_getprop("/tmp/aroma-data/kernel.prop", "cpu_undervolt"));
#	run_program("/tmp/kernel_general.sh","CPUVOLT4", file_getprop("/tmp/aroma-data/kernel.prop", "cpu_undervolt"));
#	run_program("/tmp/kernel_general.sh","CPUVOLT5", file_getprop("/tmp/aroma-data/kernel.prop", "cpu_undervolt"));
#	run_program("/tmp/kernel_general.sh","CPUVOLT6", file_getprop("/tmp/aroma-data/kernel.prop", "cpu_undervolt"));
#	run_program("/tmp/kernel_general.sh","CPUVOLT7", file_getprop("/tmp/aroma-data/kernel.prop", "cpu_undervolt"));
#	run_program("/tmp/kernel_general.sh","CPUVOLT8", file_getprop("/tmp/aroma-data/kernel.prop", "cpu_undervolt"));
#	run_program("/tmp/kernel_general.sh","CPUVOLT9", file_getprop("/tmp/aroma-data/kernel.prop", "cpu_undervolt"));
#	run_program("/tmp/kernel_general.sh","CPUVOLT10", file_getprop("/tmp/aroma-data/kernel.prop", "cpu_undervolt"));
#	run_program("/tmp/kernel_general.sh","CPUVOLT11", file_getprop("/tmp/aroma-data/kernel.prop", "cpu_undervolt"));
#	run_program("/tmp/kernel_general.sh","CPUVOLT12", file_getprop("/tmp/aroma-data/kernel.prop", "cpu_undervolt"));
#	run_program("/tmp/kernel_general.sh","CPUVOLT13", file_getprop("/tmp/aroma-data/kernel.prop", "cpu_undervolt"));
#	run_program("/tmp/kernel_general.sh","CPUVOLT14", file_getprop("/tmp/aroma-data/kernel.prop", "cpu_undervolt"));
#	run_program("/tmp/kernel_general.sh","CPUVOLT15", file_getprop("/tmp/aroma-data/kernel.prop", "cpu_undervolt"));

# ZRAM
#	package_extract_file("aroma/scripts/kernel/kernel_zram.sh", "/tmp/kernel_zram.sh");
#	set_perm(0, 0, 0777, "/tmp/kernel_zram.sh");
#	run_program("/tmp/kernel_zram.sh", file_getprop("/tmp/aroma-data/kernel.prop", "zram"));

# Internal Scheduler
#	run_program("/tmp/kernel_general.sh","int_scheduler", file_getprop("/tmp/aroma-data/kernel.prop", "int_shed"));

# Internal Readahead
#	run_program("/tmp/kernel_general.sh","int_read_ahead_kb", file_getprop("/tmp/aroma-data/kernel.prop", "int_readahead"));

# External Scheduler
#	run_program("/tmp/kernel_general.sh","ext_scheduler", file_getprop("/tmp/aroma-data/kernel.prop", "ext_shed"));

# External Readahead
#	run_program("/tmp/kernel_general.sh","ext_read_ahead_kb", file_getprop("/tmp/aroma-data/kernel.prop", "ext_readahead"));

# Charge Control
#	package_extract_file("aroma/scripts/kernel/kernel_charging.sh", "/tmp/kernel_charging.sh");
#	set_perm(0, 0, 0777, "/tmp/kernel_charging.sh");
#	run_program("/tmp/kernel_charging.sh", file_getprop("/tmp/aroma-data/kernel.prop", "charging"));
	
ui_print("<b><#009688>Finishing Installation...</#></b>");

      
	if (getprop("ro.product.device") == "jfltevzw" || getprop("ro.build.product") == "jfltevzw") then  
		package_extract_file("aroma/scripts/default_network.sh", "/tmp/default_network.sh");
		set_perm(0, 0, 0777, "/tmp/default_network.sh");
		run_program("/tmp/default_network.sh");
	endif;
	
	if (getprop("ro.product.device") == "jfltevzw" || getprop("ro.build.product") == "jfltevzw") then  
        package_extract_dir("aroma/scripts/CSCvzw", "/system");
	endif;

    if (getprop("ro.product.device") == "jfltespr" || getprop("ro.build.product") == "jfltespr") then    
		package_extract_file("aroma/scripts/eri.xml", "/data/eri.xml");
	    set_perm(0, 0, 0644, "/data/eri.xml");
	endif;
	
ui_print("<b><#009688>ROM Installed!</#></b>");
ui_print(" ");	


ui_print("<b><#009688>Unmounting Everything...</#></b>");
unmount("/system");
unmount("/data");
unmount("/cache");
ui_print(" ");
ui_print(" ");
ui_print("<b><#009688>Install Complete");
ui_print(" ");
ui_print("Please be aware the first boot may take some time.");
ui_print(" ");
ui_print("<#F44336>Reboot now</#></b>");
#### We're done
